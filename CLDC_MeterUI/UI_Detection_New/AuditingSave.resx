<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Cmd_Save.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADP0lEQVRIS+1VS0iUURR2F0ULiTZKQkVF
        UokFhQkVhOGiMkop3LRoEUoYQ7nQoofhcyIfUOMT01ATUUdR03R8zqgz4mMm01HH10+GRaAGRSDBl99x
        /snygeKiTQcO/51z7/2+c79z7h23f2qDYwr0ZjvCC7rhr22F92OD+KUXbYirsqLLakP/8CicyzdmBuu4
        gG7X1ME98q04x6pvjaiE+51aPKuzwfbOtjGSXNOoC9hPP4JzXZ9wuuEDfAsd2Jdsg+cjs4twy60y3Cvr
        WT9JcYdDsuNmr7geBM/+wNVv8/B5ZcPu2DYcKx2Q2MkKh7hHTCO23dajpm8Cli7L2iTU0yuqWsB3RJlw
        Qj+J0PmfAugZbRA/a5nChYlZeGd0yxx/M6Er6W2wDw2ipbV5dZLEGtsf2V/++F1AVMBdMZ3wN4zJmDHO
        cQ1rsfNuBcanptFpbl+ZgBoGpDQtFi+yVfQmAMHoBA60fxFgfjlHZ5wJUSYSmC0dqG+oX04yqSg48KBa
        CCjPRcecgFEWEqgS0fenmRE09VVqsyfJInt4AmKQwGhqW5vgkK5XsjuS1yeFJSCLSycZY5xndzEZ7uHd
        mFQmBHxFghHHCEIyjHJUFi7AOr2YbWqnC5zOGGUhwcHn/SIPCV6bR6VVCc5TOGF/GztA3z0ufb032ST9
        Tz9a9F5+L5WIXXV+YMaVfWAas1ekTUnQZ+1dTsAgF7HdSKK2Krvp8Mth+FUrQnimVZHa+OQsZn883oDR
        qc8YGra75Fnx0qkT7ATqSRJmRxB2FcnobFUWljc5JNMi4JRXzZ7fVW91SV0zHmaXY2ZuDnwumB1JVCIh
        W+j5IJ1lQc5JOTHBVHBqz5gTbrlVVVciMb8SN58WyCvJxXZlWp4B1qepX5HY0ozZ880tTTJmHfl1wq1s
        JNE3tiMoOh034nORXvIGNU0mNBo75ZuSV4Lg+zpcf5KFsvJScT4PPMmq0vxtJOFb7xueCo/QWHhei8Gp
        iGQBDk/KFRICFxUVyAl4onWDq5aRmY5aY5f82UTkm1BYXILsnCxxApOAMlEyjp3bNmYJCQnQarUCoHaI
        6sxcp9PJvHP55kyj0SAsLEycY2f4v23W3Nx+AUsjjcr+TbLHAAAAAElFTkSuQmCC
</value>
  </data>
</root>